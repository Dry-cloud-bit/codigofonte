#QUESTAO 1 
INDICE = 13
SOMA = 0
K = 0
while K < INDICE:
  K = K + 1
  SOMA = SOMA + K
print(SOMA)

#QUESTAO 2 
def fibonacci_sequence(n):
    fib_sequence = [0, 1]
    while fib_sequence[-1] < n:
        next_value = fib_sequence[-1] + fib_sequence[-2]
        fib_sequence.append(next_value)
    return fib_sequence

def is_fibonacci_number(num):
    fib_sequence = fibonacci_sequence(num)
    if num in fib_sequence:
        return f"O número {num} pertence à sequência de Fibonacci."
    else:
        return f"O número {num} não pertence à sequência de Fibonacci."

# Exemplo de uso
numero = int(input("Informe um número: "))
resultado = is_fibonacci_number(numero)
print(resultado)

#QUESTAO 3 
def calcular_faturamento(faturamento_diario):
    # Remover dias sem faturamento (considerando que são representados por 0)
    faturamento_diario = [f for f in faturamento_diario if f > 0]

    # Calcular o menor e o maior valor de faturamento
    menor_faturamento = min(faturamento_diario)
    maior_faturamento = max(faturamento_diario)

    # Calcular a média mensal de faturamento
    media_mensal = sum(faturamento_diario) / len(faturamento_diario)

    # Contar o número de dias com faturamento superior à média mensal
    dias_acima_da_media = sum(1 for f in faturamento_diario if f > media_mensal)

    return menor_faturamento, maior_faturamento, dias_acima_da_media

# Exemplo de uso
faturamento_diario = [
    1000, 2000, 3000, 0, 5000, 6000, 7000, 8000, 0, 9000, 10000, 11000, 12000, 0, 13000, 14000, 15000, 16000, 0, 17000, 18000, 19000, 20000, 0, 21000, 22000, 23000, 24000, 0, 25000
]

menor, maior, dias_acima_media = calcular_faturamento(faturamento_diario)

print(f"Menor valor de faturamento: R${menor}")
print(f"Maior valor de faturamento: R${maior}")
print(f"Número de dias com faturamento acima da média: {dias_acima_media}")


#QUESTAO 4
# Valores de faturamento por estado
faturamento_estados = {
    "SP": 67836.43,
    "RJ": 36678.66,
    "MG": 29229.88,
    "ES": 27165.48,
    "Outros": 19849.53
}

# Calcular o faturamento total
faturamento_total = sum(faturamento_estados.values())

# Calcular a porcentagem de representação de cada estado
percentual_representacao = {estado: (valor / faturamento_total) * 100 for estado, valor in faturamento_estados.items()}

# Exibir os resultados
for estado, percentual in percentual_representacao.items():
    print(f"{estado}: {percentual:.2f}%")

print(f"Faturamento Total: R${faturamento_total:.2f}")

# QUESTAO 5 
def inverter_string(s):
    # Inicializa uma string vazia para armazenar o resultado
    string_invertida = ""
    
    # Percorre a string original de trás para frente
    for i in range(len(s) - 1, -1, -1):
        string_invertida += s[i]
    
    return string_invertida

# Exemplo de uso
string_original = "Exemplo de string"
string_invertida = inverter_string(string_original)
print(f"String original: {string_original}")
print(f"String invertida: {string_invertida}")

